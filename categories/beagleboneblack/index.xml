<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Beagleboneblack on ROBO LOG</title>
    <link>http://blog.syundo.org/categories/beagleboneblack/</link>
    <description>Recent content in Beagleboneblack on ROBO LOG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Fri, 17 Oct 2014 23:57:16 +0900</lastBuildDate>
    
	<atom:link href="http://blog.syundo.org/categories/beagleboneblack/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Beagle Bone Blackにカメラを繋げてOpenCVで顔検出した</title>
      <link>http://blog.syundo.org/post/1033/</link>
      <pubDate>Fri, 17 Oct 2014 23:57:16 +0900</pubDate>
      
      <guid>http://blog.syundo.org/post/1033/</guid>
      <description>Beagle Bone Blackの環境が整ったので次はカメラが使えるか試してみた． そしてOpenCVで顔検出することを目指す．
今回使うカメラはこれ． 
大須のジャンク屋で売っていたもので，正体不明だったがとりあえず3個購入．1個800円．かなり古そうなので少なくともUVCには対応していないだろう． 何者か調べるためにUSBの情報を見てみる．
1 2  lsusb ID 046d:08d9 Logitech, Inc. QuickCam IM/Connect   どうやらこの製品らしいhttps://support.logitech.com/en_us/product/222
どんな画像が取れるのか試しに見てみる．
1 2  sudo apt-get install xawtv xawtv -c /dev/video0   
ロボットの目として使うには十分な画質はありそうだ． ちなみにレンズ周りにあるリング部分でピント調節することができる．ジャンクだったためリングの動きが渋くて，なかなかピント調節の方法を見つけられなかった．
さて次はBBBの上でOpenCVをビルドして使えるようにする． OpenCV2.4.9のセットアップは大方このサイトhttp://www.kkaneko.com/rinkou/opencv/opencvinstalllinux.html の通りに進めた(執筆現在は最新の2.4.10のものに置き換わっている)．
ただし，ダウンロードに時間がかかったり，エラーが出たりしたのでcmakeの部分は以下に変えた
1  cmake -DCMAKE_BUILD_TYPE=RELEASE -DWITH_TBB=ON -DWITH_GTK=ON -DWITH_OPENGL=ON -DWITH_OPENCL=OFF -DWITH_CUDA=OFF -DWITH_UNICAP=ON -DWITH_V4L=ON -DWITH_XINE=ON .   それでもBBB上では一連のセットアップに16時間程度かかった．もうどれだけ時間が掛かろうと寝るだけだったのでサンプル等一緒に入れておけばよかった． サンプル画像が無いと不便なので母艦のOpenCV環境からコピーした．トホホ．
1  sudo scp -P 22 /usr/local/share/OpenCV/samples/c/*.png ubuntu@192.168.7.2:/usr/local/share/OpenCV/samples/c   まずOpenCVからカメラが読めるか試してみる．以下のコードを使った．
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  // cam.</description>
    </item>
    
    <item>
      <title>Beagle Bone BlackにUbuntu14.04とデスクトップ環境をインストールした</title>
      <link>http://blog.syundo.org/post/971/</link>
      <pubDate>Thu, 16 Oct 2014 21:42:07 +0900</pubDate>
      
      <guid>http://blog.syundo.org/post/971/</guid>
      <description>死蔵していたBeagle Bone Blackをやっと引っ張り出してきて，とりあえずUbuntuを入れてみたので作業のメモを残したい．BBB(Beagle Bone Blackのこと)のリビジョンはA5Aということで，いかに無駄に積まれていたのか察せられる．(在庫が無い時期で，わざわざ海外から共同購入したんだよなぁ…)
まずGetting Started(http://beagleboard.org/Getting%20Started)に従ってみようとするも，そもそもBBBがUSBストレージとしてWindowsに認識されない．なぜだかわからないが，抜き差ししているとやっと認識された．それ以後は順調だった(?)．USBケーブルをつなげば仮想的にLANが繋がってる状態になるらしい．
リビジョンが古いボードであるので，まずeMMCにあらかじめ書き込んであるAngstromのバージョンアップをしなければならない． http://beagleboard.org/latest-images にある，Angstrom Distribution (BeagleBone Black - 2GB eMMC) をmicroSDカードに書き込む．
Angstromのイメージを書き込んだSDカードをBBBに挿入して差入口付近にあるboot用のボタンを押しながら電源を投入すると，4つのLEDが順番に点いていき一瞬4つ同時に光った後，ランダムに光るパターンになる．この状態のまま1時間程度放置する．書き換えが終われば再び4つのLEDが同時に点灯したままの状態になる．SDカードを抜いて電源を投入すれば，新しいImageで動くようになっている．
以上はWindows上でもできる作業だが，後の作業はLinux環境から行うほうが都合がいい． 作業環境：VMware Player，64bit Ubuntu 14.04
下準備が終わったら，次にUbuntuのboot用SDカードを作成する． 以下のサイトを参考にして作業を進める． http://elinux.org/BeagleBoardUbuntu
1 2 3 4 5  wget https://rcn-ee.net/deb/rootfs/trusty/ubuntu-14.04-console-armhf-2014-05-06.tar.xz md5sum ubuntu-14.04-console-armhf-2014-05-06.tar.xz tar xf ubuntu-14.04-console-armhf-2014-05-06.tar.xz cd ubuntu-14.04-console-armhf-2014-05-06 sudo ./setup_sdcard.sh --probe-mmc   以上でSDカードがどこにあるのか表示してくれるので，そこに書き込む
1  sudo ./setup_sdcard.sh --mmc /dev/sdX --uboot bone   SDカードをBBBに挿入して電源を入れると，Ubuntuが起動するようになる．毎回bootボタンを押すべしと書いてある古い情報もあるが，新しいAngstromのイメージに更新してあるので，ボタンを押さなくてもSDカードに入っているOSが勝手に起動する．
とりあえずBBBにSSHでログインする．
1  ssh ubuntu@192.168.7.2   BBBと母艦PCをUSBでつなげるとアドレスは192.168.7.2になる．デフォルトのユーザー名は「ubuntu」，パスワードは「temppwd」になっている．
さて，以上でインストールしたUbuntuはX window systemが含まれないリモートで操作することが想定されたイメージであった．（ubuntu-14.04-consoleとある）
今後OpenCVを用いた画像処理等を行っていきたいと考えているので，デスクトップがあるのが好ましい．そこで，BeagleBoneBlackでもストレスなく動くような軽量なWindow systemである，LXDEを入れることにした．</description>
    </item>
    
  </channel>
</rss>